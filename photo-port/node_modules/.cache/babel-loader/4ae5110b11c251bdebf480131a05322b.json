{"ast":null,"code":"var _jsxFileName = \"/Users/bob/Desktop/CodingBootcamp/oh-snap-2.0/photo-port/src/components/Contact/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactForm() {\n  _s();\n\n  //  hook will manage form data and initialize value of the state\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const {\n    name,\n    email,\n    message\n  } = formState;\n  const [errorMessage, setErrorMessage] = useState(''); // function will sync the internal state of the component formState with the user input from the DOM\n\n  function handleChange(e) {\n    // validation\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      console.log(isValid); // isValid conditional statement\n\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        if (!e.target.value.length) {\n          setErrorMessage(`${e.target.name} is required.`);\n        } else {\n          // no error\n          setErrorMessage('');\n        }\n      }\n\n      if (!errorMessage) {\n        setFormState({ ...formState,\n          [e.target.name]: e.target.value\n        });\n      }\n    } // uses setFormState() to update the formState value for the name property\n    // spread operator (...) to retain the other key-value pairs in this object\n\n\n    setFormState({ ...formState,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(formState);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      \"data-testid\": \"h1tag\",\n      children: \"Contact me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"contact-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: name,\n          onBlur: handleChange,\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          defaultValue: email,\n          name: \"email\",\n          onBlur: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          defaultValue: message,\n          onBlur: handleChange,\n          rows: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"button\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContactForm, \"I0yt9zdp/r26dwV41mNkyL7KJhw=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/bob/Desktop/CodingBootcamp/oh-snap-2.0/photo-port/src/components/Contact/index.js"],"names":["React","useState","validateEmail","ContactForm","formState","setFormState","name","email","message","errorMessage","setErrorMessage","handleChange","e","target","isValid","value","console","log","length","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n    \n    //  hook will manage form data and initialize value of the state\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n    const { name, email, message } = formState;\n    const [errorMessage, setErrorMessage] = useState('');\n    // function will sync the internal state of the component formState with the user input from the DOM\n    function handleChange(e) {\n        // validation\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            // isValid conditional statement\n            if (!isValid) {\n                setErrorMessage('Your email is invalid.');\n            } else {\n                if (!e.target.value.length) {\n                  setErrorMessage(`${e.target.name} is required.`);\n                } else {\n                    // no error\n                  setErrorMessage('');\n                }\n            }\n            if (!errorMessage) {\n                setFormState({ ...formState, [e.target.name]: e.target.value });\n            }\n        }  \n        // uses setFormState() to update the formState value for the name property\n        // spread operator (...) to retain the other key-value pairs in this object\n        setFormState({...formState, [e.target.name]: e.target.value })\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n    }\n      \n    return (\n        <section>\n          <h1 data-testid=\"h1tag\">Contact me</h1>\n          <form id=\"contact-form\" onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"name\">Name:</label>\n                    <input type=\"text\" defaultValue={name} onBlur={handleChange} name=\"name\" />\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email address:</label>\n                    <input type=\"email\" defaultValue={email} name=\"email\" onBlur={handleChange} />\n                </div>\n                <div>\n                    <label htmlFor=\"message\">Message:</label>\n                    <textarea name=\"message\" defaultValue={message} onBlur={handleChange} rows=\"5\" />\n                </div>\n                {errorMessage && (\n                    <div>\n                        <p className=\"error-text\">{errorMessage}</p>\n                    </div>\n                )}\n                <button data-testid=\"button\" type=\"submit\">Submit</button>\n          </form>\n        </section>\n    )\n}\n    \nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}