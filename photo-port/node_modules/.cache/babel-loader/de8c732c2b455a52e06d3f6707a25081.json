{"ast":null,"code":"var _jsxFileName = \"/Users/bob/Desktop/CodingBootcamp/oh-snap-2.0/photo-port/src/components/Nav/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Nav(props) {\n  _s();\n\n  // useEffect is an API that reflects the lifecycle methods of the component, such as when the component mounts, unmounts, or updates\n  useEffect(() => {\n    // if currentCategory changes, the component will re-render so that the change in document.title will be visible to the user.\n    document.title = capitalizeFirstLetter(currentCategory.name);\n  }, [currentCategory]); // conditionally render nav component // useState hook gives us option to change categories at some point in future\n\n  const {\n    categories = [],\n    setCurrentCategory,\n    currentCategory\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"flex-row px-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        \"data-testid\": \"link\",\n        href: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"camera\",\n          children: \" \\uD83D\\uDCF8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), \" Oh Snap!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"flex-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mx-2\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            \"data-testid\": \"about\",\n            href: \"#about\",\n            children: \"About me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mx-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `mx-1 ${currentCategory.name === category.name && 'navActive'}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              setCurrentCategory(category);\n            },\n            children: capitalizeFirstLetter(category.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, category.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Nav, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Nav;\nexport default Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/Users/bob/Desktop/CodingBootcamp/oh-snap-2.0/photo-port/src/components/Nav/index.js"],"names":["React","useEffect","capitalizeFirstLetter","Nav","props","document","title","currentCategory","name","categories","setCurrentCategory","map","category"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,qBAAT,QAAsC,qBAAtC;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAChB;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAI,IAAAA,QAAQ,CAACC,KAAT,GAAiBJ,qBAAqB,CAACK,eAAe,CAACC,IAAjB,CAAtC;AACH,GAHQ,EAGN,CAACD,eAAD,CAHM,CAAT,CAFgB,CAMhB;;AACA,QAAM;AACFE,IAAAA,UAAU,GAAG,EADX;AAEFC,IAAAA,kBAFE;AAGFH,IAAAA;AAHE,MAIFH,KAJJ;AAMA,sBACI;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA,4BACI;AAAA,6BACI;AAAG,uBAAY,MAAf;AAAsB,QAAA,IAAI,EAAC,GAA3B;AAAA,gCACI;AAAM,UAAA,IAAI,EAAC,KAAX;AAAiB,wBAAW,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,iCACI;AAAG,2BAAY,OAAf;AAAuB,YAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ,EASKK,UAAU,CAACE,GAAX,CAAgBC,QAAD,iBACZ;AACI,UAAA,SAAS,EAAG,QAAOL,eAAe,CAACC,IAAhB,KAAyBI,QAAQ,CAACJ,IAAlC,IAA0C,WACxD,EAFT;AAAA,iCAKI;AACI,YAAA,OAAO,EAAE,MAAM;AACXE,cAAAA,kBAAkB,CAACE,QAAD,CAAlB;AACH,aAHL;AAAA,sBAKKV,qBAAqB,CAACU,QAAQ,CAACJ,IAAV;AAL1B;AAAA;AAAA;AAAA;AAAA;AALJ,WAGSI,QAAQ,CAACJ,IAHlB;AAAA;AAAA;AAAA;AAAA,gBADH,CATL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;GAjDQL,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\n\nfunction Nav(props) {\n    // useEffect is an API that reflects the lifecycle methods of the component, such as when the component mounts, unmounts, or updates\n    useEffect(() => {\n        // if currentCategory changes, the component will re-render so that the change in document.title will be visible to the user.\n        document.title = capitalizeFirstLetter(currentCategory.name);\n    }, [currentCategory]);\n    // conditionally render nav component // useState hook gives us option to change categories at some point in future\n    const {\n        categories = [],\n        setCurrentCategory,\n        currentCategory,\n    } = props;\n\n    return (\n        <header className=\"flex-row px-1\">\n            <h2>\n                <a data-testid=\"link\" href=\"/\">\n                    <span role=\"img\" aria-label=\"camera\"> ðŸ“¸</span> Oh Snap!\n                </a>\n            </h2>\n            <nav>\n                <ul className=\"flex-row\">\n                    <li className=\"mx-2\">\n                        <a data-testid=\"about\" href=\"#about\">\n                            About me\n                        </a>\n                    </li>\n                    <li className=\"mx-2\">\n                        <span>Contact</span>\n                    </li>\n                    {categories.map((category) => (\n                        <li\n                            className={`mx-1 ${currentCategory.name === category.name && 'navActive'\n                                }`}\n                            key={category.name}\n                        >\n                            <span\n                                onClick={() => {\n                                    setCurrentCategory(category)\n                                }}\n                            >\n                                {capitalizeFirstLetter(category.name)}\n                            </span>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}